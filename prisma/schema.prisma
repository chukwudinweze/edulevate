// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}


model Course{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String
  title String
  description String?
  imageUrl String?
  price Float?
  isPublished Boolean @default(false)

  categoryId String? @db.ObjectId
  category Category? @relation(fields: [categoryId],references: [id])

  chapters Chapter[]
  attachement Attachement[]
  purchases Purchase[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([categoryId])
  @@fulltext([title])

}

model Category{
id String @id @default(auto()) @map("_id") @db.ObjectId
name String @unique
courses Course[]
}

model Attachement{
id String @id @default(auto()) @map("_id") @db.ObjectId
name String
url String
course Course @relation(fields: [courseId],references: [id], onDelete:Cascade)
courseId String @db.ObjectId

createdAt DateTime @default(now())
uodatedAt DateTime @updatedAt

@@index([courseId])
}

model Chapter{
id String @id @default(auto()) @map("_id") @db.ObjectId
title String 
description String?
videoUrl String?
position Int
isPublished Boolean @default(false)
isFree Boolean @default(false)

muxData MuxData?

course Course @relation(fields: [courseId],references: [id], onDelete:Cascade)
courseId String @db.ObjectId

userProgress UserProgress[]

createdAt DateTime @default(now())
updateAt DateTime @updatedAt

@@index([courseId])
}

model MuxData{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  assetId String
  playbackId String?

  chapter Chapter @relation(fields: [chapterId],references: [id],onDelete:Cascade)
  chapterId String @unique @db.ObjectId
}

model UserProgress{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String

  chapter Chapter @relation(fields: [chapterId], references: [id], onDelete:Cascade)
  chapterId String @db.ObjectId

  isCompleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([chapterId])
  @@unique([userId,chapterId])
}

model Purchase{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String

  course Course @relation(fields: [courseId], references: [id], onDelete:Cascade)
  courseId String @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId,courseId])
  @@index([courseId])
}

model StripeCustomer{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
  strpeCCustomerId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

}